const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const UserService = require('../utils/dbHelpers');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('fund-list')
        .setDescription('Xem danh s√°ch t·∫•t c·∫£ c√°c qu·ªπ hi·ªán c√≥'),

    async execute(interaction) {
        try {
            // Defer reply ƒë·ªÉ c√≥ th·ªùi gian x·ª≠ l√Ω
            await interaction.deferReply();

            // L·∫•y danh s√°ch c√°c qu·ªπ
            const funds = await UserService.getFundsList();

            if (funds.length === 0) {
                const embed = new EmbedBuilder()
                    .setColor('#6A994E')
                    .setTitle('üèõÔ∏è Danh S√°ch Qu·ªπ')
                    .setDescription('Ch∆∞a c√≥ qu·ªπ n√†o ƒë∆∞·ª£c t·∫°o. H√£y t·∫°o qu·ªπ ƒë·∫ßu ti√™n v·ªõi `/fund-create`!')
                    .setTimestamp()
                    .setFooter({ text: 'MDHH Community ‚Ä¢ Fund System' });

                await interaction.editReply({ embeds: [embed] });
                return;
            }

            // T·∫°o embed hi·ªÉn th·ªã danh s√°ch qu·ªπ
            const embed = new EmbedBuilder()
                .setColor('#386641')
                .setTitle('üèõÔ∏è Danh S√°ch Qu·ªπ Hi·ªán C√≥')
                .setDescription(`C√≥ **${funds.length}** qu·ªπ ƒëang ho·∫°t ƒë·ªông`)
                .setTimestamp()
                .setFooter({ text: 'MDHH Community ‚Ä¢ Fund System' });

            // Th√™m th√¥ng tin t·ª´ng qu·ªπ
            for (const fund of funds.slice(0, 10)) { // Gi·ªõi h·∫°n 10 qu·ªπ ƒë·ªÉ kh√¥ng qu√° d√†i
                const totalValue = fund.total_donated + fund.total_donated_vip;
                const createdDate = new Date(fund.created_at).toLocaleDateString('vi-VN');

                embed.addFields({
                    name: `üí∞ ${fund.name}`,
                    value: `${fund.description}\n` +
                           `**${fund.total_donated.toLocaleString()} MƒêC** | **${fund.total_donated_vip.toLocaleString()} MƒêV**\n` +
                           `üìÖ T·∫°o: ${createdDate} | üîç \`/fund fund_name:${fund.name}\``,
                    inline: false
                });
            }

            // Th√™m h∆∞·ªõng d·∫´n n·∫øu c√≥ nhi·ªÅu h∆°n 10 qu·ªπ
            if (funds.length > 10) {
                embed.addFields({
                    name: 'üìã L∆∞u √ù',
                    value: `Ch·ªâ hi·ªÉn th·ªã 10 qu·ªπ g·∫ßn nh·∫•t. T·ªïng c·ªông: **${funds.length}** qu·ªπ`,
                    inline: false
                });
            }

            // Th√™m h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng
            embed.addFields({
                name: 'üí° H∆∞·ªõng D·∫´n',
                value: '‚Ä¢ `/donate` - Donate cho qu·ªπ\n' +
                       '‚Ä¢ `/fund fund_name:t√™n_qu·ªπ` - Xem leaderboard\n' +
                       '‚Ä¢ `/fund-create` - T·∫°o qu·ªπ m·ªõi',
                inline: false
            });

            await interaction.editReply({ embeds: [embed] });

        } catch (error) {
            console.error('Error in fund-list command:', error);

            const errorEmbed = new EmbedBuilder()
                .setColor('#FF6B6B')
                .setTitle('‚ùå L·ªói')
                .setDescription('C√≥ l·ªói x·∫£y ra khi l·∫•y danh s√°ch qu·ªπ. Vui l√≤ng th·ª≠ l·∫°i sau.')
                .setTimestamp()
                .setFooter({ text: 'MDHH Community ‚Ä¢ Fund System' });

            if (interaction.replied || interaction.deferred) {
                await interaction.editReply({ embeds: [errorEmbed] });
            } else {
                await interaction.reply({ embeds: [errorEmbed], flags: 64 });
            }
        }
    },
};